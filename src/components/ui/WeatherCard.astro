---
interface Props {
  class?: string;
}

const { class: className } = Astro.props;
---

<div id="weather-card" class:list={["flex items-center space-x-4 p-4 bg-white rounded-lg shadow-md", className]}>
    <img id="weather-icon" src="https://placehold.co/64" alt="Weather Icon" width="64" height="64" class="rounded-full border-2 border-gray-300" />
    <div class="ml-4">
        <span id="weather-location" class="text-lg font-semibold block">London</span>
        <span id="temperature" class="text-2xl font-bold block mt-1">25°C</span>
        <span id="weather-description" class="text-sm text-gray-600 mt-1">Sunny</span>
    </div>
</div>

<script>
    const updateWeather = async () => {
        const cachedData = localStorage.getItem('weatherData')
        if (!cachedData) {
            return;
        }
        const parsedData = JSON.parse(cachedData)

        const apiKey = parsedData.api_key;
        const location = parsedData.location;
        const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;

        try {
            const response = await fetch(url);
            const data = await response.json();
            if (data.main) {
                const newData = {
                    api_key: apiKey,
                    location: location,
                    weather_data: data
                }
                localStorage.setItem('weatherData', JSON.stringify(newData))
                document.querySelector('div').style.display = 'flex';
                (document.getElementById('weather-location') as HTMLElement).innerText = data.name;
                (document.getElementById('temperature') as HTMLElement).innerText = `${data.main.temp}°C`;
                (document.getElementById('weather-description') as HTMLElement).innerText = data.weather[0].description;

                const iconCode = data.weather[0].icon;
                (document.getElementById('weather-icon') as HTMLImageElement).src = `https://openweathermap.org/img/wn/${iconCode}@2x.png`
            }
        } catch (error) {
            console.error('Error fetching weather data:', error);
        }
    };
    
    updateWeather()
    window.addEventListener('weather_update', updateWeather)
    setInterval(updateWeather, 1800000);
</script>