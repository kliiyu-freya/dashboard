---
export interface ToggleProps {
    id: string;
    checked?: boolean;
}

const { id, checked = false } = Astro.props;
---

<label id={id} class="relative inline-flex items-center cursor-pointer">
    <input
        id="toggle"
        type="checkbox"
        class="sr-only peer"
        checked={checked}
    />
    <div class="w-11 h-6 bg-gray-200 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary-600"></div>
</label>

<script>
    const toggleElement = document.getElementById('toggle') as HTMLInputElement;

    let isChecked = toggleElement.checked;

    toggleElement.addEventListener('change', () => {
        isChecked = toggleElement.checked;
        window.dispatchEvent(new CustomEvent('change', { detail: { checked: isChecked } }));
    });

    window.addEventListener('toggleButton', (event) => {
        const { id, checked } = (event as CustomEvent).detail as { id: string; checked: boolean };
        if (id !== toggleElement.parentElement.id) {
            return;
        }
        toggleElement.checked = checked;
    });
    
</script>
